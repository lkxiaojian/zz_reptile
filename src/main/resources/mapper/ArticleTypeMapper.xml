<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.reptile.dao.ArticleTypeMapper">
  <resultMap id="BaseResultMap" type="com.reptile.entity.ArticleType">
    <id column="article_type_id" jdbcType="VARCHAR" property="articleTypeId" />
    <result column="article_type_name" jdbcType="VARCHAR" property="articleTypeName" />
    <result column="article_type_keyword" jdbcType="VARCHAR" property="articleTypeKeyword" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="iamge_icon" jdbcType="VARCHAR" property="iamgeIcon" />
    <result column="iamge_back" jdbcType="VARCHAR" property="iamgeBack" />
    <result column="parentid" jdbcType="INTEGER" property="parentid" />
  </resultMap>
  
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    article_type_id, article_type_name, article_type_keyword, create_time, iamge_icon, 
    iamge_back, parentid
  </sql>
  
  
  
  
   <select id="selectKeyWork" parameterType="java.lang.Integer" resultMap="BaseResultMap">

	SELECT id article_type_id ,
	keyword_name article_type_keyword ,
	DATE_FORMAT(last_time,'%Y-%m-%d') iamge_icon,
	DATE_FORMAT(DATE_ADD(last_time, INTERVAL #{day,jdbcType=INTEGER} DAY),'%Y-%m-%d') iamge_back
	FROM keyword WHERE
	DATE_ADD(last_time, INTERVAL #{day,jdbcType=INTEGER} DAY) &lt;= NOW()
	ORDER BY last_time 
	
  </select>
  
    <update id="updateLastTime" parameterType="com.reptile.entity.ArticleType">
    	UPDATE keyword SET last_time=#{iamgeBack}
		where id = #{articleTypeId,jdbcType=INTEGER}
	</update>
  
  
  
  
  
  <select id="selectByExample" parameterType="com.reptile.entity.ArticleTypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from article_type
    where article_type_id = #{articleTypeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from article1
    where state = #{articleTypeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.reptile.entity.ArticleType">
    insert into article_type (article_type_id, article_type_name, article_type_keyword, 
      create_time, iamge_icon, iamge_back, 
      parentid)
    values (#{articleTypeId,jdbcType=INTEGER}, #{articleTypeName,jdbcType=VARCHAR}, #{articleTypeKeyword,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{iamgeIcon,jdbcType=VARCHAR}, #{iamgeBack,jdbcType=VARCHAR}, 
      #{parentid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.reptile.entity.ArticleType">
    insert into article_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="articleTypeId != null">
        article_type_id,
      </if>
      <if test="articleTypeName != null">
        article_type_name,
      </if>
      <if test="articleTypeKeyword != null">
        article_type_keyword,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="iamgeIcon != null">
        iamge_icon,
      </if>
      <if test="iamgeBack != null">
        iamge_back,
      </if>
      <if test="parentid != null">
        parentid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="articleTypeId != null">
        #{articleTypeId,jdbcType=INTEGER},
      </if>
      <if test="articleTypeName != null">
        #{articleTypeName,jdbcType=VARCHAR},
      </if>
      <if test="articleTypeKeyword != null">
        #{articleTypeKeyword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="iamgeIcon != null">
        #{iamgeIcon,jdbcType=VARCHAR},
      </if>
      <if test="iamgeBack != null">
        #{iamgeBack,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.reptile.entity.ArticleType">
    update article_type
    <set>
      <if test="articleTypeName != null">
        article_type_name = #{articleTypeName,jdbcType=VARCHAR},
      </if>
      <if test="articleTypeKeyword != null">
        article_type_keyword = #{articleTypeKeyword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="iamgeIcon != null">
        iamge_icon = #{iamgeIcon,jdbcType=VARCHAR},
      </if>
      <if test="iamgeBack != null">
        iamge_back = #{iamgeBack,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        parentid = #{parentid,jdbcType=INTEGER},
      </if>
    </set>
    where article_type_id = #{articleTypeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.reptile.entity.ArticleType">
    update article_type
    set article_type_name = #{articleTypeName,jdbcType=VARCHAR},
      article_type_keyword = #{articleTypeKeyword,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      iamge_icon = #{iamgeIcon,jdbcType=VARCHAR},
      iamge_back = #{iamgeBack,jdbcType=VARCHAR},
      parentid = #{parentid,jdbcType=INTEGER}
    where article_type_id = #{articleTypeId,jdbcType=INTEGER}
  </update>
</mapper>